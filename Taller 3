{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install wooldridge\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R2XcVK3VAHhH","executionInfo":{"status":"ok","timestamp":1693002709701,"user_tz":300,"elapsed":5735,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"e584b0a2-c5aa-4823-c0c7-7c7245d7dde4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: wooldridge in /usr/local/lib/python3.10/dist-packages (0.4.4)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from wooldridge) (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->wooldridge) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->wooldridge) (2023.3)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas->wooldridge) (1.23.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->wooldridge) (1.16.0)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"93pFTkCa-EQl"},"outputs":[],"source":["import wooldridge as wd\n","import pandas as pd\n","import numpy as np\n","\n","from sklearn.model_selection import GridSearchCV, train_test_split\n","from sklearn.linear_model import LinearRegression, Lasso, Ridge, ElasticNet\n","from sklearn.metrics import mean_squared_error"]},{"cell_type":"code","source":["train=pd.read_csv(\"/content/data_wage_train.csv\")"],"metadata":{"id":"bo6Cx4UNAHq_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test=pd.read_csv(\"/content/data_test.csv\")"],"metadata":{"id":"IVQMrVptAvfj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(train.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cFm6hJK47SFG","executionInfo":{"status":"ok","timestamp":1693004565663,"user_tz":300,"elapsed":217,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"1fcd21d2-23a3-41f3-c178-317a660f9f22"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   educ  exper  married  female  tenure  wage\n","0    12     37        1       1      14  4.50\n","1    14      5        1       0       0  4.50\n","2    18      4        0       0       4  6.88\n","3    12      3        0       0       0  4.44\n","4    15     33        1       0      26  8.33\n"]}]},{"cell_type":"code","source":["print(test.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AnjZDnx48JKH","executionInfo":{"status":"ok","timestamp":1693004643531,"user_tz":300,"elapsed":210,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"d1558092-4485-4a1d-9e0c-b2dc2a1ab402"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   educ  exper  married  female  tenure\n","0    10      5        0       1       0\n","1    13     21        1       0      13\n","2    11     38        0       1       3\n","3    10      1        0       0       0\n","4    16     15        1       1       5\n"]}]},{"cell_type":"code","source":["print(train.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x1D7P3w18h84","executionInfo":{"status":"ok","timestamp":1693004745274,"user_tz":300,"elapsed":233,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"ee252ca4-cb07-4801-bf0a-350e2196307c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 420 entries, 0 to 419\n","Data columns (total 6 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   educ     420 non-null    int64  \n"," 1   exper    420 non-null    int64  \n"," 2   married  420 non-null    int64  \n"," 3   female   420 non-null    int64  \n"," 4   tenure   420 non-null    int64  \n"," 5   wage     420 non-null    float64\n","dtypes: float64(1), int64(5)\n","memory usage: 19.8 KB\n","None\n"]}]},{"cell_type":"code","source":["print(test.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h1jlWEn38li6","executionInfo":{"status":"ok","timestamp":1693004758560,"user_tz":300,"elapsed":241,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"62571235-59a8-4681-f5b5-e58a3ada7530"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 106 entries, 0 to 105\n","Data columns (total 5 columns):\n"," #   Column   Non-Null Count  Dtype\n","---  ------   --------------  -----\n"," 0   educ     106 non-null    int64\n"," 1   exper    106 non-null    int64\n"," 2   married  106 non-null    int64\n"," 3   female   106 non-null    int64\n"," 4   tenure   106 non-null    int64\n","dtypes: int64(5)\n","memory usage: 4.3 KB\n","None\n"]}]},{"cell_type":"code","source":["X=train.drop(columns=\"wage\")"],"metadata":{"id":"iJdgi1pFxGH2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_train = train[\"wage\"]\n","X_train = train[['educ', 'exper', 'married', 'female', 'tenure']]"],"metadata":{"id":"oV0lMiNGDO_c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test = test[['educ', 'exper', 'married', 'female', 'tenure']]"],"metadata":{"id":"RgCPeBpEFFIM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)"],"metadata":{"id":"TgSjQMaDLdZ1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["linreg = LinearRegression()\n","linreg.fit(X_train, y_train)\n","linreg_pred = linreg.predict(X_test)"],"metadata":{"id":"qQsyn3J3Fx0G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mse = mean_squared_error(linreg_pred, y_test)\n","print(\"Mean Squared Error:\", mse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SDxxtSER_xfT","executionInfo":{"status":"ok","timestamp":1693006683611,"user_tz":300,"elapsed":218,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"b1a6998c-334a-4d90-ada3-3f477b7cd855"},"execution_count":219,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error: 10.752271497900088\n"]}]},{"cell_type":"code","source":["predictionsR_df=pd.DataFrame(data=linreg_pred,columns=['Expected']).reset_index().rename(columns={'index':'id'})"],"metadata":{"id":"U1_3sKEOH1JS","executionInfo":{"status":"ok","timestamp":1693006685250,"user_tz":300,"elapsed":224,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}}},"execution_count":220,"outputs":[]},{"cell_type":"code","source":["predictionsR_df.to_csv(\"prediccion.csv\",index=False)"],"metadata":{"id":"TbWz4c6MDiAx","executionInfo":{"status":"ok","timestamp":1693006686810,"user_tz":300,"elapsed":214,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}}},"execution_count":221,"outputs":[]},{"cell_type":"markdown","source":["##Ridge"],"metadata":{"id":"M930Tc14KM-P"}},{"cell_type":"code","source":["ridge_reg = Ridge()\n","param_grid = {'alpha': [1, 3, 4, 2]}\n","gs_ridge = GridSearchCV(\n","    ridge_reg,\n","    param_grid=param_grid,\n","    scoring='neg_mean_squared_error',\n","    cv=3, verbose=2\n",")"],"metadata":{"id":"cjgchY-_IKAv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gs_ridge.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"Pklu3A3GJk7c","executionInfo":{"status":"ok","timestamp":1693002320699,"user_tz":300,"elapsed":475,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"260b6984-42a9-4084-b9f9-a615970bec5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 4 candidates, totalling 12 fits\n","[CV] END ............................................alpha=1; total time=   0.0s\n","[CV] END ............................................alpha=1; total time=   0.0s\n","[CV] END ............................................alpha=1; total time=   0.0s\n","[CV] END ............................................alpha=3; total time=   0.0s\n","[CV] END ............................................alpha=3; total time=   0.0s\n","[CV] END ............................................alpha=3; total time=   0.0s\n","[CV] END ............................................alpha=4; total time=   0.0s\n","[CV] END ............................................alpha=4; total time=   0.0s\n","[CV] END ............................................alpha=4; total time=   0.0s\n","[CV] END ............................................alpha=2; total time=   0.0s\n","[CV] END ............................................alpha=2; total time=   0.0s\n","[CV] END ............................................alpha=2; total time=   0.0s\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=3, estimator=Ridge(), param_grid={'alpha': [1, 3, 4, 2]},\n","             scoring='neg_mean_squared_error', verbose=2)"],"text/html":["<style>#sk-container-id-10 {color: black;background-color: white;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=Ridge(), param_grid={&#x27;alpha&#x27;: [1, 3, 4, 2]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;, verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" ><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=Ridge(), param_grid={&#x27;alpha&#x27;: [1, 3, 4, 2]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;, verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-29\" type=\"checkbox\" ><label for=\"sk-estimator-id-29\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" ><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","source":["gs_ridge.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RsHCUG9nJuwC","executionInfo":{"status":"ok","timestamp":1693002322483,"user_tz":300,"elapsed":307,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"96083e41-a995-4f66-f024-fe40db628fd0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'alpha': 2}"]},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["ridge_pred = gs_ridge.predict(X_test)"],"metadata":{"id":"w71BdP86JpKa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["v2=pd.DataFrame(data=linreg_pred,columns=['Expected']).reset_index().rename(columns={'index':'id'})"],"metadata":{"id":"BMwasDMVKbOL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["v2.to_csv(\"ridge5.csv\",index=False)"],"metadata":{"id":"nXcSzjIXKnms"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Lasso"],"metadata":{"id":"AWEAfTbPKYh3"}},{"cell_type":"code","source":["lasso = Lasso()\n","param_grid = {'alpha': [0, 5, 10, 15, 20, 25, 50, 100]}\n","gs_lasso = GridSearchCV(lasso,\n","                        param_grid=param_grid,\n","                        scoring='neg_mean_squared_error',\n","                        cv=3)"],"metadata":{"id":"sUMy3pIWKaH_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gs_lasso.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"XFOGMjBBTlhs","executionInfo":{"status":"ok","timestamp":1693002378158,"user_tz":300,"elapsed":216,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"6c3ede40-c428-4099-bd57-ef5694a134f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.068e+03, tolerance: 3.744e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.116e+03, tolerance: 3.723e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.236e+02, tolerance: 2.694e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:909: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  self.best_estimator_.fit(X, y, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.586e+03, tolerance: 5.093e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=3, estimator=Lasso(),\n","             param_grid={'alpha': [0, 5, 10, 15, 20, 25, 50, 100]},\n","             scoring='neg_mean_squared_error')"],"text/html":["<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=Lasso(),\n","             param_grid={&#x27;alpha&#x27;: [0, 5, 10, 15, 20, 25, 50, 100]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-31\" type=\"checkbox\" ><label for=\"sk-estimator-id-31\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=Lasso(),\n","             param_grid={&#x27;alpha&#x27;: [0, 5, 10, 15, 20, 25, 50, 100]},\n","             scoring=&#x27;neg_mean_squared_error&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-32\" type=\"checkbox\" ><label for=\"sk-estimator-id-32\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: Lasso</label><div class=\"sk-toggleable__content\"><pre>Lasso()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-33\" type=\"checkbox\" ><label for=\"sk-estimator-id-33\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Lasso</label><div class=\"sk-toggleable__content\"><pre>Lasso()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":["lasso_pred = gs_lasso.predict(X_test)"],"metadata":{"id":"RGW2t5zmTo9b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gs_lasso.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Azun9ezQTuMM","executionInfo":{"status":"ok","timestamp":1693002387053,"user_tz":300,"elapsed":329,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"8ce936b6-3c9c-4ddf-c045-7cb16d06e2f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'alpha': 0}"]},"metadata":{},"execution_count":177}]},{"cell_type":"code","source":["v4=pd.DataFrame(data=linreg_pred,columns=['Expected']).reset_index().rename(columns={'index':'id'})"],"metadata":{"id":"2fSn5sLQTwUj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["v4.to_csv(\"lasso1.csv\",index=False)"],"metadata":{"id":"R3FISOqtT_IZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Elastic Net"],"metadata":{"id":"UR3hvvDRURCC"}},{"cell_type":"code","source":["en = ElasticNet()\n","param_grid = {'alpha':[0,1,5, 10],\n","              'l1_ratio':[0.2, 0.5, 0.9]}\n","gs_en = GridSearchCV(en, param_grid=param_grid,\n","                     scoring='neg_mean_squared_error',\n","                     cv=3,\n","                     verbose=3)"],"metadata":{"id":"UZocx6KVUUf7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gs_en.fit(X_train, y_train)\n","en_pred = gs_en.predict(X_test)\n","mean_squared_error(lasso_pred, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IzQKbhy_UaIR","executionInfo":{"status":"ok","timestamp":1693000880053,"user_tz":300,"elapsed":537,"user":{"displayName":"Laura Delgado","userId":"17111006670233916572"}},"outputId":"fa171773-7661-4413-9ed0-31a6849fdb10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 12 candidates, totalling 36 fits\n","[CV 1/3] END ...........alpha=0, l1_ratio=0.2;, score=-10.286 total time=   0.0s\n","[CV 2/3] END ............alpha=0, l1_ratio=0.2;, score=-9.182 total time=   0.0s\n","[CV 3/3] END ...........alpha=0, l1_ratio=0.2;, score=-10.573 total time=   0.0s\n","[CV 1/3] END ...........alpha=0, l1_ratio=0.5;, score=-10.286 total time=   0.0s\n","[CV 2/3] END ............alpha=0, l1_ratio=0.5;, score=-9.182 total time=   0.0s\n","[CV 3/3] END ...........alpha=0, l1_ratio=0.5;, score=-10.573 total time=   0.0s\n","[CV 1/3] END ...........alpha=0, l1_ratio=0.9;, score=-10.286 total time=   0.0s\n","[CV 2/3] END ............alpha=0, l1_ratio=0.9;, score=-9.182 total time=   0.0s\n","[CV 3/3] END ...........alpha=0, l1_ratio=0.9;, score=-10.573 total time=   0.0s\n","[CV 1/3] END ...........alpha=1, l1_ratio=0.2;, score=-11.441 total time=   0.0s\n","[CV 2/3] END ...........alpha=1, l1_ratio=0.2;, score=-10.217 total time=   0.0s\n","[CV 3/3] END ...........alpha=1, l1_ratio=0.2;, score=-10.584 total time=   0.0s\n","[CV 1/3] END ...........alpha=1, l1_ratio=0.5;, score=-11.734 total time=   0.0s\n","[CV 2/3] END ...........alpha=1, l1_ratio=0.5;, score=-10.469 total time=   0.0s\n","[CV 3/3] END ...........alpha=1, l1_ratio=0.5;, score=-10.728 total time=   0.0s\n","[CV 1/3] END ...........alpha=1, l1_ratio=0.9;, score=-11.798 total time=   0.0s\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+03, tolerance: 3.458e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+03, tolerance: 3.745e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.042e+03, tolerance: 3.748e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+03, tolerance: 3.458e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+03, tolerance: 3.745e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.042e+03, tolerance: 3.748e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+03, tolerance: 3.458e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.121e+03, tolerance: 3.745e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_validation.py:686: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  estimator.fit(X_train, y_train, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.042e+03, tolerance: 3.748e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n"]},{"output_type":"stream","name":"stdout","text":["[CV 2/3] END ...........alpha=1, l1_ratio=0.9;, score=-10.469 total time=   0.0s\n","[CV 3/3] END ...........alpha=1, l1_ratio=0.9;, score=-10.789 total time=   0.0s\n","[CV 1/3] END ...........alpha=5, l1_ratio=0.2;, score=-12.685 total time=   0.0s\n","[CV 2/3] END ...........alpha=5, l1_ratio=0.2;, score=-11.131 total time=   0.0s\n","[CV 3/3] END ...........alpha=5, l1_ratio=0.2;, score=-10.984 total time=   0.0s\n","[CV 1/3] END ...........alpha=5, l1_ratio=0.5;, score=-13.571 total time=   0.0s\n","[CV 2/3] END ...........alpha=5, l1_ratio=0.5;, score=-11.600 total time=   0.0s\n","[CV 3/3] END ...........alpha=5, l1_ratio=0.5;, score=-11.300 total time=   0.0s\n","[CV 1/3] END ...........alpha=5, l1_ratio=0.9;, score=-15.984 total time=   0.0s\n","[CV 2/3] END ...........alpha=5, l1_ratio=0.9;, score=-13.144 total time=   0.0s\n","[CV 3/3] END ...........alpha=5, l1_ratio=0.9;, score=-12.252 total time=   0.0s\n","[CV 1/3] END ..........alpha=10, l1_ratio=0.2;, score=-13.976 total time=   0.0s\n","[CV 2/3] END ..........alpha=10, l1_ratio=0.2;, score=-11.953 total time=   0.0s\n","[CV 3/3] END ..........alpha=10, l1_ratio=0.2;, score=-11.589 total time=   0.0s\n","[CV 1/3] END ..........alpha=10, l1_ratio=0.5;, score=-16.250 total time=   0.0s\n","[CV 2/3] END ..........alpha=10, l1_ratio=0.5;, score=-13.762 total time=   0.0s\n","[CV 3/3] END ..........alpha=10, l1_ratio=0.5;, score=-12.964 total time=   0.0s\n","[CV 1/3] END ..........alpha=10, l1_ratio=0.9;, score=-17.167 total time=   0.0s\n","[CV 2/3] END ..........alpha=10, l1_ratio=0.9;, score=-14.478 total time=   0.0s\n","[CV 3/3] END ..........alpha=10, l1_ratio=0.9;, score=-14.663 total time=   0.0s\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/model_selection/_search.py:909: UserWarning: With alpha=0, this algorithm does not converge well. You are advised to use the LinearRegression estimator\n","  self.best_estimator_.fit(X, y, **fit_params)\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: UserWarning: Coordinate descent with no regularization may lead to unexpected results and is discouraged.\n","  model = cd_fast.enet_coordinate_descent(\n","/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.622e+03, tolerance: 5.478e-01 Linear regression models with null weight for the l1 regularization term are more efficiently fitted using one of the solvers implemented in sklearn.linear_model.Ridge/RidgeCV instead.\n","  model = cd_fast.enet_coordinate_descent(\n"]},{"output_type":"execute_result","data":{"text/plain":["8.325713748346383"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["v5=pd.DataFrame(data=linreg_pred,columns=['Expected']).reset_index().rename(columns={'index':'id'})"],"metadata":{"id":"9-N79sz8Uqzx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["v5.to_csv(\"elastic.csv\",index=False)"],"metadata":{"id":"XYe_8uiWUtyq"},"execution_count":null,"outputs":[]}]}